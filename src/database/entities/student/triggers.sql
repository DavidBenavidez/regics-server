-- --PROCEDURES
-- -- Add Stock
-- -- DROP PROCEDURE IF EXISTS addStock;
-- -- DELIMITER $$
-- -- CREATE PROCEDURE addStock (
-- --   IN id VARCHAR(17),
-- --   IN qty INT,
-- --   IN apparel VARCHAR(17),
-- --   IN delivery VARCHAR(17),
-- --   IN employee VARCHAR(10))
-- -- BEGIN
-- --   INSERT INTO stock VALUES (
-- --     id,
-- --     qty,
-- --     NOW(),
-- --     apparel,
-- --     delivery,
-- --     employee
-- --   );
-- --   SELECT
-- --     stock.id, stock.qty,
-- --     stock.deliveryDate, stock.apparel,
-- --     stock.delivery
-- --   FROM stock
-- --   WHERE stock.id = id;
-- -- END;
-- -- $$
-- -- DELIMITER ;

-- -- -- Delete Stock
-- -- DROP PROCEDURE IF EXISTS deleteStock;
-- -- DELIMITER $$
-- -- CREATE PROCEDURE deleteStock (
-- --   IN stock_id VARCHAR(17),
-- --   IN emp VARCHAR(10))
-- -- BEGIN
-- --   UPDATE stock
-- --   SET employee = emp
-- --   WHERE id = stock_id;
-- --   DELETE FROM stock
-- --   WHERE id = stock_id;
-- -- END;
-- -- $$
-- -- DELIMITER ;


-- -- Edit Student Adviser
-- DROP PROCEDURE IF EXISTS edit_student_adviser;
-- DELIMITER $$
-- CREATE PROCEDURE edit_student_adviser (
--   IN newAdviser INT,
--   IN studentNo VARCHAR(10)
-- )
-- BEGIN
--   UPDATE student
--   SET adviser = newAdviser
--   WHERE student_no = studentNo;
-- END;
-- $$

-- DROP TRIGGER IF EXISTS edit_student_adviser_trigger;
-- DELIMITER $$
-- CREATE TRIGGER edit_student_adviser_trigger
-- AFTER UPDATE ON student
-- FOR EACH ROW INSERT INTO student_advisers_list(student_no, empno) VALUES (NEW.student_no, NEW.adviser);
-- $$

-- -- TRIGGERS

-- -- On Edit

-- -- DELIMITER ;

-- -- On Addition
-- -- DROP TRIGGER IF EXISTS newStudent;
-- -- DELIMITER $$
-- -- CREATE TRIGGER newStock_log
-- -- AFTER INSERT ON stock
-- -- FOR EACH ROW
-- --   BEGIN
-- --     CALL log(
-- --       'add_stock',
-- --       NEW.id,
-- --       NEW.employee
-- --     );
-- --   END;
-- -- $$
-- -- DELIMITER ;

-- -- -- On Delete
-- -- DROP TRIGGER IF EXISTS removeStock_log;
-- -- DELIMITER $$
-- -- CREATE TRIGGER removeStock_log
-- -- BEFORE DELETE ON stock
-- -- FOR EACH ROW
-- --   BEGIN
-- --     CALL log(
-- --       'remove_stock',
-- --       OLD.id,
-- --       OLD.employee
-- --     );
-- --   END;
-- -- $$
-- -- DELIMITER ;